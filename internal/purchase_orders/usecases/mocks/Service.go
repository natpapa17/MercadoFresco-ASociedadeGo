// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	purchaseOrders "github.com/natpapa17/MercadoFresco-ASociedadeGo/internal/purchase_orders"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Create provides a mock function with given fields: OrderNumber, OrderDate, TrackingCode, BuyerId, ProductRecordId, OrderStatusId
func (_m *Service) Create(OrderNumber string, OrderDate string, TrackingCode string, BuyerId int, ProductRecordId int, OrderStatusId int) (purchaseOrders.PurchaseOrder, error) {
	ret := _m.Called(OrderNumber, OrderDate, TrackingCode, BuyerId, ProductRecordId, OrderStatusId)

	var r0 purchaseOrders.PurchaseOrder
	if rf, ok := ret.Get(0).(func(string, string, string, int, int, int) purchaseOrders.PurchaseOrder); ok {
		r0 = rf(OrderNumber, OrderDate, TrackingCode, BuyerId, ProductRecordId, OrderStatusId)
	} else {
		r0 = ret.Get(0).(purchaseOrders.PurchaseOrder)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, int, int, int) error); ok {
		r1 = rf(OrderNumber, OrderDate, TrackingCode, BuyerId, ProductRecordId, OrderStatusId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewService interface {
	mock.TestingT
	Cleanup(func())
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewService(t mockConstructorTestingTNewService) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
