// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	domain "github.com/natpapa17/MercadoFresco-ASociedadeGo/internal/carriers/domain"
	mock "github.com/stretchr/testify/mock"
)

// LocalityRepository is an autogenerated mock type for the LocalityRepository type
type LocalityRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *LocalityRepository) GetAll() (domain.Localities, error) {
	ret := _m.Called()

	var r0 domain.Localities
	if rf, ok := ret.Get(0).(func() domain.Localities); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Localities)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetById provides a mock function with given fields: id
func (_m *LocalityRepository) GetById(id int) (domain.Locality, error) {
	ret := _m.Called(id)

	var r0 domain.Locality
	if rf, ok := ret.Get(0).(func(int) domain.Locality); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.Locality)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewLocalityRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewLocalityRepository creates a new instance of LocalityRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLocalityRepository(t mockConstructorTestingTNewLocalityRepository) *LocalityRepository {
	mock := &LocalityRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
